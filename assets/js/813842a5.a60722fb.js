"use strict";(self.webpackChunkdev_portal_docsite=self.webpackChunkdev_portal_docsite||[]).push([[67119],{15680:(e,n,a)=>{a.d(n,{xA:()=>p,yg:()=>v});var i=a(96540);function t(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,i)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){t(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n){if(null==e)return{};var a,i,t=function(e,n){if(null==e)return{};var a,i,t={},r=Object.keys(e);for(i=0;i<r.length;i++)a=r[i],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)a=r[i],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var l=i.createContext({}),m=function(e){var n=i.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},p=function(e){var n=m(e.components);return i.createElement(l.Provider,{value:n},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var a=e.components,t=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),g=m(a),d=t,v=g["".concat(l,".").concat(d)]||g[d]||c[d]||r;return a?i.createElement(v,o(o({ref:n},p),{},{components:a})):i.createElement(v,o({ref:n},p))}));function v(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var r=a.length,o=new Array(r);o[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[g]="string"==typeof e?e:t,o[1]=s;for(var m=2;m<r;m++)o[m]=a[m];return i.createElement.apply(null,o)}return i.createElement.apply(null,a)}d.displayName="MDXCreateElement"},70724:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>m});var i=a(58168),t=(a(96540),a(15680));const r={title:"Migrations",sidebar_label:"Migrations",sidebar_position:9,slug:"/ibc/light-clients/wasm/migrations"},o="Migrations",s={unversionedId:"light-clients/wasm/migrations",id:"version-v9.0.x/light-clients/wasm/migrations",title:"Migrations",description:"This guide provides instructions for migrating 08-wasm versions.",source:"@site/ibc-go_versioned_docs/version-v9.0.x/03-light-clients/04-wasm/09-migrations.md",sourceDirName:"03-light-clients/04-wasm",slug:"/ibc/light-clients/wasm/migrations",permalink:"/ibc-go/ibc/light-clients/wasm/migrations",draft:!1,tags:[],version:"v9.0.x",sidebarPosition:9,frontMatter:{title:"Migrations",sidebar_label:"Migrations",sidebar_position:9,slug:"/ibc/light-clients/wasm/migrations"},sidebar:"defaultSidebar",previous:{title:"Client",permalink:"/ibc-go/ibc/light-clients/wasm/client"},next:{title:"Overview",permalink:"/ibc-go/ibc/light-clients/tendermint/overview"}},l={},m=[{value:"From ibc-go v8.4.x to ibc-go v9.0.x",id:"from-ibc-go-v84x-to-ibc-go-v90x",level:2},{value:"Chains",id:"chains",level:3},{value:"From v0.3.0+ibc-go-v8.3-wasmvm-v2.0 to v0.4.1-ibc-go-v8.4-wasmvm-v2.0",id:"from-v030ibc-go-v83-wasmvm-v20-to-v041-ibc-go-v84-wasmvm-v20",level:2},{value:"Contract developers",id:"contract-developers",level:3},{value:"From v0.2.0+ibc-go-v7.3-wasmvm-v1.5 to v0.3.1-ibc-go-v7.4-wasmvm-v1.5",id:"from-v020ibc-go-v73-wasmvm-v15-to-v031-ibc-go-v74-wasmvm-v15",level:2},{value:"Contract developers",id:"contract-developers-1",level:3},{value:"From v0.2.0+ibc-go-v8.3-wasmvm-v2.0 to v0.3.0-ibc-go-v8.3-wasmvm-v2.0",id:"from-v020ibc-go-v83-wasmvm-v20-to-v030-ibc-go-v83-wasmvm-v20",level:2},{value:"Contract developers",id:"contract-developers-2",level:3},{value:"From v0.1.1+ibc-go-v7.3-wasmvm-v1.5 to v0.2.0-ibc-go-v7.3-wasmvm-v1.5",id:"from-v011ibc-go-v73-wasmvm-v15-to-v020-ibc-go-v73-wasmvm-v15",level:2},{value:"Contract developers",id:"contract-developers-3",level:3},{value:"From ibc-go v7.3.x to ibc-go v8.0.x",id:"from-ibc-go-v73x-to-ibc-go-v80x",level:2},{value:"Chains",id:"chains-1",level:3},{value:"From v0.1.0+ibc-go-v8.0-wasmvm-v1.5 to v0.2.0-ibc-go-v8.3-wasmvm-v2.0",id:"from-v010ibc-go-v80-wasmvm-v15-to-v020-ibc-go-v83-wasmvm-v20",level:2},{value:"Chains",id:"chains-2",level:3}],p={toc:m},g="wrapper";function c(e){let{components:n,...a}=e;return(0,t.yg)(g,(0,i.A)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h1",{id:"migrations"},"Migrations"),(0,t.yg)("p",null,"This guide provides instructions for migrating 08-wasm versions."),(0,t.yg)("p",null,"Please note that the following releases are retracted. Please refer to the appropriate migrations section for upgrading."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"v0.3.1-0.20240717085919-bb71eef0f3bf => v0.3.0+ibc-go-v8.3-wasmvm-v2.0\nv0.2.1-0.20240717085554-570d057959e3 => v0.2.0+ibc-go-v7.6-wasmvm-v1.5\nv0.2.1-0.20240523101951-4b45d1822fb6 => v0.2.0+ibc-go-v8.3-wasmvm-v2.0\nv0.1.2-0.20240412103620-7ee2a2452b79 => v0.1.1+ibc-go-v7.3-wasmvm-v1.5\nv0.1.1-0.20231213092650-57fcdb9a9a9d => v0.1.0+ibc-go-v8.0-wasmvm-v1.5\nv0.1.1-0.20231213092633-b306e7a706e1 => v0.1.0+ibc-go-v7.3-wasmvm-v1.5\n")),(0,t.yg)("h2",{id:"from-ibc-go-v84x-to-ibc-go-v90x"},"From ibc-go v8.4.x to ibc-go v9.0.x"),(0,t.yg)("h3",{id:"chains"},"Chains"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"The ",(0,t.yg)("inlineCode",{parentName:"li"},"Initialize"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"Status"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"GetTimestampAtHeight"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"GetLatestHeight"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"VerifyMembership"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"VerifyNonMembership"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"VerifyClientMessage"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"UpdateState")," and ",(0,t.yg)("inlineCode",{parentName:"li"},"UpdateStateOnMisbehaviour")," functions in ",(0,t.yg)("inlineCode",{parentName:"li"},"ClientState")," have been removed and all their logic has been moved to functions of the ",(0,t.yg)("inlineCode",{parentName:"li"},"LightClientModule"),"."),(0,t.yg)("li",{parentName:"ul"},"The ",(0,t.yg)("inlineCode",{parentName:"li"},"MigrateContract")," function has been removed from ",(0,t.yg)("inlineCode",{parentName:"li"},"ClientState"),"."),(0,t.yg)("li",{parentName:"ul"},"The ",(0,t.yg)("inlineCode",{parentName:"li"},"VerifyMembershipMsg")," and ",(0,t.yg)("inlineCode",{parentName:"li"},"VerifyNonMembershipMsg")," payloads for ",(0,t.yg)("inlineCode",{parentName:"li"},"SudoMsg")," have been modified. The ",(0,t.yg)("inlineCode",{parentName:"li"},"Path")," field of both structs has been updated from ",(0,t.yg)("inlineCode",{parentName:"li"},"v1.MerklePath")," to ",(0,t.yg)("inlineCode",{parentName:"li"},"v2.MerklePath"),". The new ",(0,t.yg)("inlineCode",{parentName:"li"},"v2.MerklePath")," field contains a ",(0,t.yg)("inlineCode",{parentName:"li"},"KeyPath")," of ",(0,t.yg)("inlineCode",{parentName:"li"},"[][]byte")," as opposed to ",(0,t.yg)("inlineCode",{parentName:"li"},"[]string"),", see ",(0,t.yg)("a",{parentName:"li",href:"/ibc-go/migrations/v8-to-v9#23-commitment"},"23-commitment"),". This supports proving values stored under keys which contain non-utf8 encoded symbols. As a result, the JSON field ",(0,t.yg)("inlineCode",{parentName:"li"},"path")," containing ",(0,t.yg)("inlineCode",{parentName:"li"},"key_path")," of both messages will marshal elements as a base64 encoded bytestrings. This is a breaking change for 08-wasm client contracts and they should be migrated to correctly support deserialisation of the ",(0,t.yg)("inlineCode",{parentName:"li"},"v2.MerklePath")," field."),(0,t.yg)("li",{parentName:"ul"},"The ",(0,t.yg)("inlineCode",{parentName:"li"},"ExportMetadataMsg")," struct has been removed and is no longer required for contracts to implement. Core IBC will handle exporting all key/value's written to the store by a light client contract."),(0,t.yg)("li",{parentName:"ul"},"The ",(0,t.yg)("inlineCode",{parentName:"li"},"ZeroCustomFields")," interface function has been removed from the ",(0,t.yg)("inlineCode",{parentName:"li"},"ClientState")," interface. Core IBC only used this function to set tendermint client states when scheduling an IBC software upgrade. The interface function has been replaced by a type assertion."),(0,t.yg)("li",{parentName:"ul"},"The ",(0,t.yg)("inlineCode",{parentName:"li"},"MaxWasmByteSize")," function has been removed in favor of the ",(0,t.yg)("inlineCode",{parentName:"li"},"MaxWasmSize")," constant."),(0,t.yg)("li",{parentName:"ul"},"The ",(0,t.yg)("inlineCode",{parentName:"li"},"HasChecksum"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"GetAllChecksums")," and ",(0,t.yg)("inlineCode",{parentName:"li"},"Logger")," functions have been moved from the ",(0,t.yg)("inlineCode",{parentName:"li"},"types")," package to a method on the ",(0,t.yg)("inlineCode",{parentName:"li"},"Keeper")," type in the ",(0,t.yg)("inlineCode",{parentName:"li"},"keeper")," package."),(0,t.yg)("li",{parentName:"ul"},"The ",(0,t.yg)("inlineCode",{parentName:"li"},"InitializePinnedCodes")," function has been moved to a method on the ",(0,t.yg)("inlineCode",{parentName:"li"},"Keeper")," type in the ",(0,t.yg)("inlineCode",{parentName:"li"},"keeper")," package."),(0,t.yg)("li",{parentName:"ul"},"The ",(0,t.yg)("inlineCode",{parentName:"li"},"CustomQuerier"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"StargateQuerier")," and ",(0,t.yg)("inlineCode",{parentName:"li"},"QueryPlugins")," types have been moved from the ",(0,t.yg)("inlineCode",{parentName:"li"},"types")," package to the ",(0,t.yg)("inlineCode",{parentName:"li"},"keeper")," package."),(0,t.yg)("li",{parentName:"ul"},"The ",(0,t.yg)("inlineCode",{parentName:"li"},"NewDefaultQueryPlugins"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"AcceptListStargateQuerier")," and ",(0,t.yg)("inlineCode",{parentName:"li"},"RejectCustomQuerier")," functions has been moved from the ",(0,t.yg)("inlineCode",{parentName:"li"},"types")," package to the ",(0,t.yg)("inlineCode",{parentName:"li"},"keeper")," package."),(0,t.yg)("li",{parentName:"ul"},"The ",(0,t.yg)("inlineCode",{parentName:"li"},"NewDefaultQueryPlugins")," function signature has changed to take an argument: ",(0,t.yg)("inlineCode",{parentName:"li"},"queryRouter ibcwasm.QueryRouter"),"."),(0,t.yg)("li",{parentName:"ul"},"The ",(0,t.yg)("inlineCode",{parentName:"li"},"AcceptListStargateQuerier")," function signature has changed to take an additional argument: ",(0,t.yg)("inlineCode",{parentName:"li"},"queryRouter ibcwasm.QueryRouter"),"."),(0,t.yg)("li",{parentName:"ul"},"The ",(0,t.yg)("inlineCode",{parentName:"li"},"WithQueryPlugins")," function signature has changed to take in the ",(0,t.yg)("inlineCode",{parentName:"li"},"QueryPlugins")," type from the ",(0,t.yg)("inlineCode",{parentName:"li"},"keeper")," package (previously from the ",(0,t.yg)("inlineCode",{parentName:"li"},"types")," package)."),(0,t.yg)("li",{parentName:"ul"},"The ",(0,t.yg)("inlineCode",{parentName:"li"},"VMGasRegister")," variable has been moved from the ",(0,t.yg)("inlineCode",{parentName:"li"},"types")," package to the ",(0,t.yg)("inlineCode",{parentName:"li"},"keeper")," package.")),(0,t.yg)("h2",{id:"from-v030ibc-go-v83-wasmvm-v20-to-v041-ibc-go-v84-wasmvm-v20"},"From v0.3.0+ibc-go-v8.3-wasmvm-v2.0 to v0.4.1-ibc-go-v8.4-wasmvm-v2.0"),(0,t.yg)("h3",{id:"contract-developers"},"Contract developers"),(0,t.yg)("p",null,"Contract developers are required to update their JSON API message structure for the ",(0,t.yg)("inlineCode",{parentName:"p"},"SudoMsg")," payloads ",(0,t.yg)("inlineCode",{parentName:"p"},"VerifyMembershipMsg")," and ",(0,t.yg)("inlineCode",{parentName:"p"},"VerifyNonMembershipMsg"),".\nThe ",(0,t.yg)("inlineCode",{parentName:"p"},"path")," field on both JSON API messages has been renamed to ",(0,t.yg)("inlineCode",{parentName:"p"},"merkle_path"),"."),(0,t.yg)("p",null,"A migration is required for existing 08-wasm client contracts in order to correctly handle the deserialisation of these fields."),(0,t.yg)("h2",{id:"from-v020ibc-go-v73-wasmvm-v15-to-v031-ibc-go-v74-wasmvm-v15"},"From v0.2.0+ibc-go-v7.3-wasmvm-v1.5 to v0.3.1-ibc-go-v7.4-wasmvm-v1.5"),(0,t.yg)("h3",{id:"contract-developers-1"},"Contract developers"),(0,t.yg)("p",null,"Contract developers are required to update their JSON API message structure for the ",(0,t.yg)("inlineCode",{parentName:"p"},"SudoMsg")," payloads ",(0,t.yg)("inlineCode",{parentName:"p"},"VerifyMembershipMsg")," and ",(0,t.yg)("inlineCode",{parentName:"p"},"VerifyNonMembershipMsg"),".\nThe ",(0,t.yg)("inlineCode",{parentName:"p"},"path")," field on both JSON API messages has been renamed to ",(0,t.yg)("inlineCode",{parentName:"p"},"merkle_path"),"."),(0,t.yg)("p",null,"A migration is required for existing 08-wasm client contracts in order to correctly handle the deserialisation of these fields."),(0,t.yg)("h2",{id:"from-v020ibc-go-v83-wasmvm-v20-to-v030-ibc-go-v83-wasmvm-v20"},"From v0.2.0+ibc-go-v8.3-wasmvm-v2.0 to v0.3.0-ibc-go-v8.3-wasmvm-v2.0"),(0,t.yg)("h3",{id:"contract-developers-2"},"Contract developers"),(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"v0.3.0")," release of 08-wasm for ibc-go ",(0,t.yg)("inlineCode",{parentName:"p"},"v8.3.x")," and above introduces a breaking change for client contract developers."),(0,t.yg)("p",null,"The contract API ",(0,t.yg)("inlineCode",{parentName:"p"},"SudoMsg")," payloads ",(0,t.yg)("inlineCode",{parentName:"p"},"VerifyMembershipMsg")," and ",(0,t.yg)("inlineCode",{parentName:"p"},"VerifyNonMembershipMsg")," have been modified.\nThe encoding of the ",(0,t.yg)("inlineCode",{parentName:"p"},"Path")," field of both structs has been updated from ",(0,t.yg)("inlineCode",{parentName:"p"},"v1.MerklePath")," to ",(0,t.yg)("inlineCode",{parentName:"p"},"v2.MerklePath")," to support proving values stored under keys which contain non-utf8 encoded symbols. "),(0,t.yg)("p",null,"As a result, the ",(0,t.yg)("inlineCode",{parentName:"p"},"Path")," field now contains a ",(0,t.yg)("inlineCode",{parentName:"p"},"MerklePath")," composed of ",(0,t.yg)("inlineCode",{parentName:"p"},"key_path")," of ",(0,t.yg)("inlineCode",{parentName:"p"},"[][]byte")," as opposed to ",(0,t.yg)("inlineCode",{parentName:"p"},"[]string"),". The JSON field ",(0,t.yg)("inlineCode",{parentName:"p"},"path")," containing ",(0,t.yg)("inlineCode",{parentName:"p"},"key_path")," of both ",(0,t.yg)("inlineCode",{parentName:"p"},"VerifyMembershipMsg")," and ",(0,t.yg)("inlineCode",{parentName:"p"},"VerifyNonMembershipMsg")," structs will now marshal elements as base64 encoded bytestrings. See below for example JSON diff."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'{\n  "verify_membership": {\n    "height": {\n      "revision_height": 1\n    },\n    "delay_time_period": 0,\n    "delay_block_period": 0,\n    "proof":"dmFsaWQgcHJvb2Y=",\n    "path": {\n+      "key_path":["L2liYw==","L2tleS9wYXRo"]\n-      "key_path":["/ibc","/key/path"]\n    },\n    "value":"dmFsdWU="\n  }\n}\n')),(0,t.yg)("p",null,"A migration is required for existing 08-wasm client contracts in order to correctly handle the deserialisation of ",(0,t.yg)("inlineCode",{parentName:"p"},"key_path")," from ",(0,t.yg)("inlineCode",{parentName:"p"},"[]string")," to ",(0,t.yg)("inlineCode",{parentName:"p"},"[][]byte"),".\nContract developers should familiarise themselves with the migration path offered by 08-wasm ",(0,t.yg)("a",{parentName:"p",href:"/ibc-go/ibc/light-clients/wasm/governance#migrating-an-existing-wasm-light-client-contract"},"here"),"."),(0,t.yg)("p",null,"An example of the required changes in a client contract may look like:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},"#[cw_serde]\npub struct MerklePath {\n+   pub key_path: Vec<cosmwasm_std::Binary>,\n-   pub key_path: Vec<String>,\n}\n")),(0,t.yg)("p",null,"Please refer to the ",(0,t.yg)("a",{parentName:"p",href:"https://docs.rs/cosmwasm-std/2.0.4/cosmwasm_std/struct.Binary.html"},(0,t.yg)("inlineCode",{parentName:"a"},"cosmwasm_std"))," documentation for more information."),(0,t.yg)("h2",{id:"from-v011ibc-go-v73-wasmvm-v15-to-v020-ibc-go-v73-wasmvm-v15"},"From v0.1.1+ibc-go-v7.3-wasmvm-v1.5 to v0.2.0-ibc-go-v7.3-wasmvm-v1.5"),(0,t.yg)("h3",{id:"contract-developers-3"},"Contract developers"),(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"v0.2.0")," release of 08-wasm for ibc-go ",(0,t.yg)("inlineCode",{parentName:"p"},"v7.6.x")," and above introduces a breaking change for client contract developers."),(0,t.yg)("p",null,"The contract API ",(0,t.yg)("inlineCode",{parentName:"p"},"SudoMsg")," payloads ",(0,t.yg)("inlineCode",{parentName:"p"},"VerifyMembershipMsg")," and ",(0,t.yg)("inlineCode",{parentName:"p"},"VerifyNonMembershipMsg")," have been modified.\nThe encoding of the ",(0,t.yg)("inlineCode",{parentName:"p"},"Path")," field of both structs has been updated from ",(0,t.yg)("inlineCode",{parentName:"p"},"v1.MerklePath")," to ",(0,t.yg)("inlineCode",{parentName:"p"},"v2.MerklePath")," to support proving values stored under keys which contain non-utf8 encoded symbols. "),(0,t.yg)("p",null,"As a result, the ",(0,t.yg)("inlineCode",{parentName:"p"},"Path")," field now contains a ",(0,t.yg)("inlineCode",{parentName:"p"},"MerklePath")," composed of ",(0,t.yg)("inlineCode",{parentName:"p"},"key_path")," of ",(0,t.yg)("inlineCode",{parentName:"p"},"[][]byte")," as opposed to ",(0,t.yg)("inlineCode",{parentName:"p"},"[]string"),". The JSON field ",(0,t.yg)("inlineCode",{parentName:"p"},"path")," containing ",(0,t.yg)("inlineCode",{parentName:"p"},"key_path")," of both ",(0,t.yg)("inlineCode",{parentName:"p"},"VerifyMembershipMsg")," and ",(0,t.yg)("inlineCode",{parentName:"p"},"VerifyNonMembershipMsg")," structs will now marshal elements as base64 encoded bytestrings. See below for example JSON diff."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'{\n  "verify_membership": {\n    "height": {\n      "revision_height": 1\n    },\n    "delay_time_period": 0,\n    "delay_block_period": 0,\n    "proof":"dmFsaWQgcHJvb2Y=",\n    "path": {\n+      "key_path":["L2liYw==","L2tleS9wYXRo"]\n-      "key_path":["/ibc","/key/path"]\n    },\n    "value":"dmFsdWU="\n  }\n}\n')),(0,t.yg)("p",null,"A migration is required for existing 08-wasm client contracts in order to correctly handle the deserialisation of ",(0,t.yg)("inlineCode",{parentName:"p"},"key_path")," from ",(0,t.yg)("inlineCode",{parentName:"p"},"[]string")," to ",(0,t.yg)("inlineCode",{parentName:"p"},"[][]byte"),".\nContract developers should familiarise themselves with the migration path offered by 08-wasm ",(0,t.yg)("a",{parentName:"p",href:"/ibc-go/ibc/light-clients/wasm/governance#migrating-an-existing-wasm-light-client-contract"},"here"),"."),(0,t.yg)("p",null,"An example of the required changes in a client contract may look like:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},"#[cw_serde]\npub struct MerklePath {\n+   pub key_path: Vec<cosmwasm_std::Binary>,\n-   pub key_path: Vec<String>,\n}\n")),(0,t.yg)("p",null,"Please refer to the ",(0,t.yg)("a",{parentName:"p",href:"https://docs.rs/cosmwasm-std/2.0.4/cosmwasm_std/struct.Binary.html"},(0,t.yg)("inlineCode",{parentName:"a"},"cosmwasm_std"))," documentation for more information."),(0,t.yg)("h2",{id:"from-ibc-go-v73x-to-ibc-go-v80x"},"From ibc-go v7.3.x to ibc-go v8.0.x"),(0,t.yg)("h3",{id:"chains-1"},"Chains"),(0,t.yg)("p",null,"In the 08-wasm versions compatible with ibc-go v7.3.x and above from the v7 release line, the checksums of the uploaded Wasm bytecodes are all stored under a single key. From ibc-go v8.0.x the checksums are stored using ",(0,t.yg)("a",{parentName:"p",href:"https://docs.cosmos.network/v0.50/build/packages/collections#keyset"},(0,t.yg)("inlineCode",{parentName:"a"},"collections.KeySet")),", whose full functionality became available in Cosmos SDK v0.50. There is therefore an ",(0,t.yg)("a",{parentName:"p",href:"https://github.com/cosmos/ibc-go/blob/57fcdb9a9a9db9b206f7df2f955866dc4e10fef4/modules/light-clients/08-wasm/module.go#L115-L118"},"automatic migration handler")," configured in the 08-wasm module to migrate the stored checksums to ",(0,t.yg)("inlineCode",{parentName:"p"},"collections.KeySet"),"."),(0,t.yg)("h2",{id:"from-v010ibc-go-v80-wasmvm-v15-to-v020-ibc-go-v83-wasmvm-v20"},"From v0.1.0+ibc-go-v8.0-wasmvm-v1.5 to v0.2.0-ibc-go-v8.3-wasmvm-v2.0"),(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"WasmEngine")," interface has been updated to reflect changes in the function signatures of Wasm VM:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},"type WasmEngine interface {\n- StoreCode(code wasmvm.WasmCode) (wasmvm.Checksum, error)\n+ StoreCode(code wasmvm.WasmCode, gasLimit uint64) (wasmvmtypes.Checksum, uint64, error)\n\n  StoreCodeUnchecked(code wasmvm.WasmCode) (wasmvm.Checksum, error)\n\n  Instantiate(\n    checksum wasmvm.Checksum,\n    env wasmvmtypes.Env,\n    info wasmvmtypes.MessageInfo,\n    initMsg []byte,\n    store wasmvm.KVStore,\n    goapi wasmvm.GoAPI,\n    querier wasmvm.Querier,\n    gasMeter wasmvm.GasMeter,\n    gasLimit uint64,\n    deserCost wasmvmtypes.UFraction,\n- ) (*wasmvmtypes.Response, uint64, error)\n+ ) (*wasmvmtypes.ContractResult, uint64, error)\n\n  Query(\n    checksum wasmvm.Checksum,\n    env wasmvmtypes.Env,\n    queryMsg []byte,\n    store wasmvm.KVStore,\n    goapi wasmvm.GoAPI,\n    querier wasmvm.Querier,\n    gasMeter wasmvm.GasMeter,\n    gasLimit uint64,\n    deserCost wasmvmtypes.UFraction,\n- ) ([]byte, uint64, error)\n+ ) (*wasmvmtypes.QueryResult, uint64, error)\n\n  Migrate(\n    checksum wasmvm.Checksum,\n    env wasmvmtypes.Env,\n    migrateMsg []byte,\n    store wasmvm.KVStore,\n    goapi wasmvm.GoAPI,\n    querier wasmvm.Querier,\n    gasMeter wasmvm.GasMeter,\n    gasLimit uint64,\n    deserCost wasmvmtypes.UFraction,\n- ) (*wasmvmtypes.Response, uint64, error)\n+ ) (*wasmvmtypes.ContractResult, uint64, error)\n\n  Sudo(\n    checksum wasmvm.Checksum,\n    env wasmvmtypes.Env,\n    sudoMsg []byte,\n    store wasmvm.KVStore,\n    goapi wasmvm.GoAPI,\n    querier wasmvm.Querier,\n    gasMeter wasmvm.GasMeter,\n    gasLimit uint64,\n    deserCost wasmvmtypes.UFraction,\n- ) (*wasmvmtypes.Response, uint64, error)\n+ ) (*wasmvmtypes.ContractResult, uint64, error)\n\n  GetCode(checksum wasmvm.Checksum) (wasmvm.WasmCode, error)\n\n  Pin(checksum wasmvm.Checksum) error\n\n  Unpin(checksum wasmvm.Checksum) error\n}\n")),(0,t.yg)("p",null,"Similar changes were required in the functions of ",(0,t.yg)("inlineCode",{parentName:"p"},"MockWasmEngine")," interface."),(0,t.yg)("h3",{id:"chains-2"},"Chains"),(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"SupportedCapabilities")," field of ",(0,t.yg)("inlineCode",{parentName:"p"},"WasmConfig")," is now of type ",(0,t.yg)("inlineCode",{parentName:"p"},"[]string"),":"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},"type WasmConfig struct {\n  DataDir string\n- SupportedCapabilities string\n+ SupportedCapabilities []string\n  ContractDebugMode bool\n}\n")))}c.isMDXComponent=!0}}]);